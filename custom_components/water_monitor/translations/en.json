{
  "title": "Water Monitor",
  "config": {
    "step": {
      "user": {
        "title": "Set up Water Monitor",
        "description": "Configure your sensors and session tracking rules.",
        "data": {
          "sensor_prefix": "Sensor name prefix",
          "flow_sensor": "Flow sensor",
          "volume_sensor": "Volume sensor",
          "hot_water_sensor": "Hot water binary sensor (optional)",
          "min_session_volume": "Minimum session volume",
          "min_session_duration": "Minimum session duration (seconds)",
          "session_gap_tolerance": "Gap tolerance (seconds)",
          "session_continuity_window": "Continuity window (seconds)",
          "low_flow_enable": "Enable low-flow leak detection",
          "tank_refill_leak_enable": "Enable tank refill leak detection"
        }
      },
      "tank_leak": {
        "title": "Tank refill leak detection",
        "description": "Trigger when several similar small refills occur within a short time â€” typical of a leaky toilet flapper.",
        "data": {
          "tank_refill_min_volume": "Minimum refill volume",
          "tank_refill_max_volume": "Maximum refill volume (0 = disabled)",
          "tank_refill_volume_tolerance_pct": "Similarity tolerance (%)",
          "tank_refill_repeat_count": "Repeat count to trigger",
          "tank_refill_window_s": "Window to count repeats (seconds)",
          "tank_refill_clear_idle_s": "Auto-clear after idle (seconds)",
          "tank_refill_cooldown_s": "Cooldown after clear (seconds)"
        },
        "data_description": {
          "tank_refill_min_volume": "Ignore refills smaller than this.",
          "tank_refill_max_volume": "Ignore refills larger than this (0 disables the cap).",
          "tank_refill_volume_tolerance_pct": "How similar volumes must be to be counted together.",
          "tank_refill_repeat_count": "Number of similar refills within the window required to trigger.",
          "tank_refill_window_s": "Time window to collect refills for comparison.",
          "tank_refill_clear_idle_s": "Time without matching refills before the alert clears.",
          "tank_refill_cooldown_s": "Suppress re-triggering for this long after clearing."
        }
      },
      "low_flow": {
        "title": "Low-flow leak detection",
        "description": "Configure when a sustained low flow should be considered a leak.",
        "data": {
          "low_flow_max_flow": "Max low-flow rate",
          "low_flow_seed_low_flow_duration_s": "Seed low-flow duration (seconds)",
          "low_flow_min_duration_s": "Minimum duration to trigger (seconds)",
          "low_flow_clear_idle_s": "Clear after idle (seconds at zero flow)",
          "low_flow_counting_mode": "Counting mode",
          "low_flow_smoothing_window_s": "Smoothing window (seconds)",
          "low_flow_cooldown_s": "Cooldown after clear (seconds)",
          "low_flow_clear_on_sustained_high_flow_s": "Clear after sustained high flow (seconds, optional)"
        },
        "data_description": {
          "low_flow_counting_mode": "Choose how time is accumulated during low-flow:\n- Any non-zero flow (wall clock): counts all time while flow > 0\n- Only time within low-flow range: counts only while 0 < flow \u2264 max low-flow"
        }
      }
    },
    "error": {
      "entity_not_found": "Entity not found"
    }
  },
  "options": {
    "step": {
      "init": {
        "title": "Water Monitor options",
        "description": "Update your sensors, session rules, and leak detection settings.",
        "data": {
          "sensor_prefix": "Sensor name prefix",
          "flow_sensor": "Flow sensor",
          "volume_sensor": "Volume sensor",
          "hot_water_sensor": "Hot water binary sensor (optional)",
          "min_session_volume": "Minimum session volume",
          "min_session_duration": "Minimum session duration (seconds)",
          "session_gap_tolerance": "Gap tolerance (seconds)",
          "session_continuity_window": "Continuity window (seconds)",
          "low_flow_enable": "Enable low-flow leak detection",
          "tank_refill_leak_enable": "Enable tank refill leak detection"
        }
      },
      "tank_leak": {
        "title": "Tank refill leak detection options",
        "description": "Adjust the thresholds for detecting repeated similar refills.",
        "data": {
          "tank_refill_min_volume": "Minimum refill volume",
          "tank_refill_max_volume": "Maximum refill volume (0 = disabled)",
          "tank_refill_volume_tolerance_pct": "Similarity tolerance (%)",
          "tank_refill_repeat_count": "Repeat count to trigger",
          "tank_refill_window_s": "Window to count repeats (seconds)",
          "tank_refill_clear_idle_s": "Auto-clear after idle (seconds)",
          "tank_refill_cooldown_s": "Cooldown after clear (seconds)"
        },
        "data_description": {
          "tank_refill_min_volume": "Ignore refills smaller than this.",
          "tank_refill_max_volume": "Ignore refills larger than this (0 disables the cap).",
          "tank_refill_volume_tolerance_pct": "How similar volumes must be to be counted together.",
          "tank_refill_repeat_count": "Number of similar refills within the window required to trigger.",
          "tank_refill_window_s": "Time window to collect refills for comparison.",
          "tank_refill_clear_idle_s": "Time without matching refills before the alert clears.",
          "tank_refill_cooldown_s": "Suppress re-triggering for this long after clearing."
        }
      },
      "low_flow": {
        "title": "Low-flow leak detection options",
        "description": "Adjust how the low-flow leak sensor behaves.",
        "data": {
          "low_flow_max_flow": "Max low-flow rate",
          "low_flow_seed_low_flow_duration_s": "Seed low-flow duration (seconds)",
          "low_flow_min_duration_s": "Minimum duration to trigger (seconds)",
          "low_flow_clear_idle_s": "Clear after idle (seconds at zero flow)",
          "low_flow_counting_mode": "Counting mode",
          "low_flow_smoothing_window_s": "Smoothing window (seconds)",
          "low_flow_cooldown_s": "Cooldown after clear (seconds)",
          "low_flow_clear_on_sustained_high_flow_s": "Clear after sustained high flow (seconds, optional)"
        },
        "data_description": {
          "low_flow_counting_mode": "Choose how time is accumulated during low-flow:\n- Any non-zero flow (wall clock): counts all time while flow > 0\n- Only time within low-flow range: counts only while 0 < flow \u2264 max low-flow"
        }
      }
    }
  }
}